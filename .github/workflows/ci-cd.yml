name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GH_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/nextjs-cicd
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "${{ secrets.GH_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            cd ~/nextjs-cicd || mkdir ~/nextjs-cicd && cd ~/nextjs-cicd

            docker compose down || true

            # Pull latest image
            IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/nextjs-cicd
            docker pull $IMAGE_NAME:latest

            cat <<EOF > docker-compose.yml
            services:
              app:
                image: $IMAGE_NAME:latest
                ports:
                  - "3000:3000"
                restart: always
            EOF

            docker compose up -d
