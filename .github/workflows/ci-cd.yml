name: Branch-Based Deployment

on:
  push:
    branches:
      - dev
      - main
      - sandbox

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GH_NEW_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          # Tag images with branch name
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/nextjs-cicd
          TAG=${{ github.ref_name }}

          docker build -t $IMAGE_NAME:$TAG .
          docker push $IMAGE_NAME:$TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/sandbox'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine Environment
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "ENV=test" >> $GITHUB_ENV
            echo "COMPOSE_FILE=docker-compose-test.yml" >> $GITHUB_ENV
            echo "DOMAIN=test.hatesglobal.com" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo "COMPOSE_FILE=docker-compose-prod.yml" >> $GITHUB_ENV
            echo "DOMAIN=hatesglobal.com" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/sandbox" ]]; then
            echo "ENV=sandbox" >> $GITHUB_ENV
            echo "COMPOSE_FILE=docker-compose-sandbox.yml" >> $GITHUB_ENV
            echo "DOMAIN=sandbox.hatesglobal.com" >> $GITHUB_ENV
          else
            echo "Error: Unknown branch"
            exit 1
          fi

      - name: SSH and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Deploying to ${{ env.ENV }} environment (${{ env.DOMAIN }})"

            mkdir -p ~/nextjs-cicd && cd ~/nextjs-cicd

            COMPOSE_URL="https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref_name }}/${{ env.COMPOSE_FILE }}"
            echo "Downloading compose file from: $COMPOSE_URL"
            wget -q "$COMPOSE_URL" -O docker-compose.yml || {
              echo "Failed to download compose file"
              exit 1
            }

            if [ ! -s docker-compose.yml ]; then
              echo "Error: Compose file is empty or missing"
              exit 1
            fi

            sudo docker compose down || true
            sudo docker image prune -af

            IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/nextjs-cicd:${{ github.ref_name }}"
            sudo docker pull "$IMAGE_NAME"

            sudo docker compose up -d


            echo "Successfully deployed to ${{ env.DOMAIN }}"
